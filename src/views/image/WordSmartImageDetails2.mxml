<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" implements="views.slide.ISlideAdderModule" width="100%" height="100%" xmlns:buttons="views.buttons.*" xmlns:image="views.image.*" xmlns:slide="views.slide.*">
	<s:layout>
		<s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import jp.wordsmart.WordSmartConstants;
			import jp.wordsmart.assets.IconLib;
			import jp.wordsmart.audio.getDefaultAudio;
			import jp.wordsmart.dto.WSAudio;
			import jp.wordsmart.dto.WSImage;
			import jp.wordsmart.events.AudioEvent;
			import jp.wordsmart.events.ImageEvent;
			import jp.wordsmart.model.AppModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import ui.titlewindows.AWindowSkin;
			
			import utils.url.openInBrowser;
			
			import views.slide.ISlideAdderModule;
			
			
			
			[Bindable]public var show_controls:Boolean = true;
			
			private var _wordSmartImage:WSImage;
			
			[Bindable]
			public var listOfImages:ArrayCollection = new ArrayCollection;
			
			protected function cc(event:FlexEvent):void
			{
				this.setStyle("skinClass", AWindowSkin);
			}
			
			
			[Bindable]
			public function get wordSmartImage():WSImage
			{
				return _wordSmartImage;
			}
			
			public function set wordSmartImage(value:WSImage):void
			{
				_wordSmartImage = value;
			}
			
			
			
			public function updateImage():void
			{
				wordSmartImage.image_title = ti_title.text;
				wordSmartImage.image_content = ta_content.text;
				wordSmartImage.image_copyright = ta_copyright.text;
				
				
			}
			
		/* 	protected function btn_remove_clickHandler(event:MouseEvent):void
			{
				if(selectedImage)
				{
					imageController.remove_image_by_id(wordSmartImage, function(evt:ResultEvent):void
					{
						var success:Boolean = new ResultHelper().ResultIsGood(evt.result as String);
						if(success)
						{
							wordSmartImage.isLocal = 0;
							dispatchEvent(new Event("IMAGE_REMOVED_EVENT"));
							//PopUpManager.removePopUp(this)
						}
					});
				}
			} */
			
			protected function btn_record_audio_clickHandler(event:MouseEvent):void
			{
				var da:WSAudio = getDefaultAudio();
				da.audio_language = AppModel.getInstance().currentBaseLanguage;
				da.audio_transcript = wordSmartImage.image_tags;
				dispatchEvent(new AudioEvent(AudioEvent.EVENT_RECORD_AUDIO,da,true));
			}
			
			
			
			
			protected function btn_dl_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				trace("TO DO Download if image is good;")
			}
			

			protected function saveSlide():void
			{
				updateImage();
				dispatchEvent(new ImageEvent(ImageEvent.EVENT_UPDATE_IMAGE_TO_REMOTE,wordSmartImage,true));
			}
			protected function removeSlide():void
			{
				//TODO
				trace("Remove SLide to do");
			}


			

		]]>
	</fx:Script>
	
	<s:HGroup width="100%" id="control_bar" visible="{show_controls}" includeInLayout="{show_controls}">
    		<s:HGroup width="100%" horizontalAlign="left">
				<slide:SlideAdderNavigatorBar 
					showCreateButton="true" 
					showListButton="true" />
    		</s:HGroup>	
    		<s:HGroup width="100%" horizontalAlign="right">
				<slide:SlideAdderButtons wordSmartImage="{wordSmartImage}" 
										 showEditDetails="{wordSmartImage != null}"
										 showShowKeywordDetails="{wordSmartImage != null}"
										 showSaveSlide="{wordSmartImage != null}"
										 showRemove="{wordSmartImage != null}"
										 showEditSlide="{wordSmartImage != null}"
										 showAddToKeyword="{wordSmartImage != null}" 
										 saveFunc="saveSlide"
										 removeFunc="removeSlide"
										 />
    		</s:HGroup>	
    </s:HGroup>	
    
	<mx:Form id="myForm" width="100%" height="100%">
		<s:HGroup width="100%" height="100%">
			
			<s:VGroup width="50%" gap="15" height="100%" horizontalAlign="center">
				
				<mx:FormItem>
					<s:HGroup>
						<s:Label text="Created"/>
						<s:Label id="lb_date_added" text="{wordSmartImage.image_date_added}"/>
					</s:HGroup>
				</mx:FormItem>
				
				<s:VGroup>
					<s:Label text="Title"/>
					<s:TextArea id="ti_title" text="{wordSmartImage.image_title}" maxChars="255" width="245" height="48">
					</s:TextArea>
				</s:VGroup>
				<s:BorderContainer width="161" height="121" borderColor="0" borderWeight="1">
					
					
				<mx:Image width="100%" height="100%"   source="{wordSmartImage.image_url}"/>
					
				</s:BorderContainer>
			</s:VGroup>
			<s:VGroup width="50%">
				<s:Label text="Content"/>
				<s:TextArea width="100%" height="100%" id="ta_content" text="{wordSmartImage.image_content}">
				</s:TextArea>
				<s:Label text="Tags"/>
				<image:ImageTagEditor id="tagger" image="{wordSmartImage}"  height="195"/>
				<s:HGroup width="100%" horizontalAlign="right">
					<!--<buttons:WSIconButton width="100" icon="{IconLib.MICROPHONE_16}"  id="btn_record_audio" toolTip="Record Audio" label="Record Audio" click="btn_record_audio_clickHandler(event)"/>-->
				</s:HGroup>
			</s:VGroup>
			
		</s:HGroup>
		<s:HGroup width="100%">
			<s:VGroup width="100%">
				<s:Label text="Image Copyright Info"/>
				<s:TextArea width="100%" height="47" id="ta_copyright" text="{wordSmartImage.image_copyright}" maxChars="100">
				</s:TextArea>
			</s:VGroup>	
		</s:HGroup>
		<s:HGroup maxWidth="{this.width-20}">
			<mx:Text selectable="true" text="{wordSmartImage.image_url}"  width="450"/>
		</s:HGroup>
	</mx:Form>
	

    
	
</s:Group>
