<?xml version="1.0" encoding="utf-8"?>
<s:Group  xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="cc(event)"  xmlns:components="jp.wordsmart.components.*" xmlns:image="views.image.*" xmlns:old="views.audio.old.*">
	<fx:Declarations>
		
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import jp.wordsmart.components.dynoSlide.models.DynoSlideModel;
			import jp.wordsmart.dto.WSImage;
			import jp.wordsmart.model.SlideAdderModel;
			
			import mx.events.FlexEvent;
			
			
			[Bindable]
			private var _wordsmartimage:jp.wordsmart.dto.WSImage;
			
			
			[Bindable]public var image_edit_model:DynoSlideModel;
			
			
			
			public function get wordsmartImage():jp.wordsmart.dto.WSImage
			{
				return _wordsmartimage;
			}

			public function set wordsmartImage(value:jp.wordsmart.dto.WSImage):void
			{
				if(value == null)return;
				_wordsmartimage = value;
				setUpEditor();
			}
	

			protected function cc(event:FlexEvent):void
			{
			if(wordsmartImage){
				setUpEditor()
			}
			}
			
			private var editorReady:Boolean;
			private function setUpEditor():void
			{
			if(editorReady && wordsmartImage)
			{
				cc_imageEditor.makeNew();
				cc_imageEditor.wordSmartImage = wordsmartImage;
				cc_imageEditor.addNewImage(wordsmartImage.url, true);
				//presumed to maximize - resize to actual size if smaller
				if(Number(wordsmartImage.width)<cc_imageEditor.selected_dynoBitMap.model.width)
				{
					cc_imageEditor.selected_dynoBitMap.model.width = Number(wordsmartImage.width);
				}
				if(Number(wordsmartImage.image_h)<cc_imageEditor.selected_dynoBitMap.model.height)
				{
					cc_imageEditor.selected_dynoBitMap.model.height = Number(wordsmartImage.image_h);
				}
				
				cc_imageEditor.selected_dynoBitMap.model.x = (cc_imageEditor.container.width/2) - cc_imageEditor.selected_dynoBitMap.width/2;
				cc_imageEditor.selected_dynoBitMap.model.y = (cc_imageEditor.container.height/2) - cc_imageEditor.selected_dynoBitMap.height/2;
			}
			}
		


			

			public function updateModel():void
			{
				cc_imageEditor.updateModel();
			}
			public function getWSImage():WSImage
			{
			return cc_imageEditor.wordSmartImage;
			}
			
			public function getBitMapData():BitmapData
			{
				return cc_imageEditor.getBitMapData()
			}


			protected function cc_imageEditor_creationCompleteHandler(event:FlexEvent):void
			{
				editorReady = true;
				setUpEditor();
			}

		]]>
	</fx:Script>

	
	<s:Group width="{SlideAdderModel.getInstance().imageWidth}" height="{SlideAdderModel.getInstance().imageHeight}" id="imageHolder"  >
		<image:WSImageEditor creationComplete="cc_imageEditor_creationCompleteHandler(event)" id="cc_imageEditor" imageHeight="{SlideAdderModel.getInstance().imageHeight}" imageWidth="{SlideAdderModel.getInstance().imageWidth}" width="100%" height="100%"/>
		
	</s:Group>
		
			
		

	
	
</s:Group>
	

