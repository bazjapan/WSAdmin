/** * GOOGLE API - AS3 LIBRARY * /** * @author Joris Timmerman * @version 2.1 *  * GoogleNewsSearch - Search blog sites using Google * Build by Joris Timmerman, these classes uses the Google Ajax API *  * SPECIAL THANKS TO GOOGLE FOR PROVIDING THE AJAX API * THIS IS AN OPEN SOURCE PROJECT DELIVERED BY BOULEVART NV (www.boulevart.be) */ package be.boulevart.google.ajaxapi.search.news {	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IOErrorEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLVariables;		import com.adobe.serialization.json.JSON;	import com.adobe.utils.StringUtil;		import be.boulevart.google.ajaxapi.search.GoogleSearchResult;	import be.boulevart.google.ajaxapi.search.news.data.GoogleNewsItem;	import be.boulevart.google.ajaxapi.search.news.data.types.GoogleNeWSImage;	import be.boulevart.google.ajaxapi.search.news.data.types.GoogleNewsRelatedStory;	import be.boulevart.google.apicore.GoogleAPIServiceURL;	import be.boulevart.google.apicore.GoogleApiKeyStore;	import be.boulevart.google.events.GoogleAPIErrorEvent;	import be.boulevart.google.events.GoogleApiEvent;		/**	 * @author joris	 */	public class GoogleNewsSearch extends EventDispatcher {		public function GoogleNewsSearch() {		}		/**		 * @param scoring This optional argument tells the video search system how to order results. Results may be ordered by relevance (which is the default) or by date. To select ordering by relevance, do not supply this argument. To select ordering by date, set scoring as scoring=d		 * @param location geotag, searches on location, for example; brussels		 * @param topic This optional argument tells the news search system to scope search results to a particular topic. You can find the possible values in GoogleNewsTopic (data.types); Topics vary slightly from edition to edition. E.g., in African editions like Namibia or Zimbabwe(&ned=en_na, &ned=en_zw) the topic af is available and represents the African topic. In general, if you are viewing an edition of Google News and see a topic of interest, click on the topic header and view the &topic argument in the browser's address bar.		 * @param edition specify the edition, fe. us, uk, fr_ca,nl_be		 */		public function search(searchString : String,startValue : int = 0,scoring : String = "",location : String = "",topic : String = "",edition : String = "",lang : String = "") : void {			var serviceURL : String = GoogleAPIServiceURL.SEARCH_NEWS_SERVICE;						var loader : URLLoader = new URLLoader();			var request : URLRequest = new URLRequest(serviceURL);						var vars : URLVariables = new URLVariables();			vars.v = "1.0";			vars.q = searchString;						if(startValue > 0) {				vars.start = startValue;			}						vars.rsz = "large";						if(StringUtil.trim(lang).length > 0) {				vars.hl = lang;			}							if(StringUtil.trim(scoring).length > 0) {				vars.scoring = scoring;			}											if(StringUtil.trim(location).length > 0) {				vars.geo = location;			}							if(StringUtil.trim(topic).length > 0) {				vars.topic = topic;			}						if(StringUtil.trim(edition).length > 0) {				vars.ned = edition;			}								if(GoogleApiKeyStore.keyIsSet) {				vars.key = GoogleApiKeyStore.API_KEY;			}						request.data = vars;						loader.addEventListener(Event .COMPLETE, onResponse);			loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError); 			loader.load(request);		}		private function onResponse(event : Event) : void {			var json : Object = JSON.decode("" + event.target.data);			if(json.responseData != null) {				var results : Array = json.responseData.results as Array;								var resultaten : Array = new Array();				for each(var data:Object in results) {					var item : GoogleNewsItem = new GoogleNewsItem();					item.title = data.title;					item.titleNoFormatting = data.titleNoFormatting;					item.unescapedUrl = data.unescapedUrl;					item.url = data.url;					item.cluster_url = data.clusterUrl;					item.content = data.content;					item.publisher = data.publisher;					item.location = data.location;					item.relatedStories = new Array();										for each(var rstory in data.relatedStories) {						var story : GoogleNewsRelatedStory = new GoogleNewsRelatedStory();						story.title = rstory.title;						story.titleNoFormatting = rstory.titleNoFormatting;						story.unescapedUrl = rstory.unescapedUrl;						story.url = rstory.url;						story.publisher = rstory.publisher;						story.published = rstory.publishedDate;						story.location = rstory.location;						item.relatedStories.push(story);					}										if(data.image != null) {						var imgData : Object = data.image;						var img : GoogleNeWSImage = new GoogleNeWSImage();						img.title = imgData.title;						img.titleNoFormatting = imgData.titleNoFormatting;						img.url = imgData.url;						img.publisher = imgData.publisher;											img.thumbUrl = imgData.tbUrl;						img.thumbWidth = imgData.tbWidth;						img.thumbHeight = imgData.tbHeight;						item.image = img;					}else {						item.image = new GoogleNeWSImage();					}					resultaten.push(item);				}				var searchItem : GoogleSearchResult = new GoogleSearchResult();				if(json.responseData.cursor.currentPageIndex != null) {					searchItem.currentPageIndex = json.responseData.cursor.currentPageIndex;				}				if(json.responseData.cursor.pages != null) {					searchItem.numPages = json.responseData.cursor.pages.length;				}				searchItem.results = resultaten;								if(json.responseData.cursor.estimatedResultCount != null) {					searchItem.estimatedNumResults = json.responseData.cursor.estimatedResultCount;				}				dispatchEvent(new GoogleApiEvent(GoogleApiEvent.NEWS_SEARCH_RESULT, searchItem));			}else {				dispatchEvent(new GoogleAPIErrorEvent(GoogleAPIErrorEvent.API_ERROR, json.responseDetails as String, json.responseStatus as int));			}		}		private function onIOError(event : IOErrorEvent) : void {  			dispatchEvent(new GoogleApiEvent(GoogleApiEvent.ON_ERROR, "IOERROR: " + event.text));		} 	}}